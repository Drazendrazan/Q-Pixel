AddEventHandler('np-hasino:accessLowerComputer', function()
    if not IsLVComputerLoggedIn then
        TriggerEvent('DoLongHudText', 'Not Authorized', 2)
        return
    end
    local hasKeyCard = exports['np-inventory']:hasEnoughOfItem('casinoexeckeycard', 1, false, true)
    -- if not hasKeyCard then
    --     TriggerEvent('DoLongHudText', 'Missing keycard', 2)
    --     return
    -- end
    local prompt,a,b,c = RPC.execute('np-hasino:getCurrentLockboxPrompt', hasKeyCard)
    if not prompt then
        return
    end
    exports['np-ui']:openApplication('hasino-lower-pc', {
        prompts = prompt,
        a = a,
        b = b,
        c = c,
    })
end)

exports['np-ui']:openApplication('hasino-lower-login', {
    attempts = attempts,
    hint = hint,
    timeRemaining = timeRemaining,
})

exports['np-ui']:openApplication('textbox', {
    callbackUrl = 'np-healthcare:icu:ui:removePatient',
    key = 'np-healthcare:icu:ui:removePatient',
    items = {
      {
        _type = 'select',
        options = getICURoomsListOptions(),
        icon = 'user-edit',
        label = _L("healthcare-text-room", "Room"),
        name = 'room',
      }, { icon = 'user-edit', label = _L("healthcare-text-id", "Citizen ID"), name = 'cid' },
    },
    show = true,
  });
end)



local gameDuration = 5000
    local gameRoundsTotal = 4
    local numberOfShapes = 4
    local minigameHackExp = 10
    exports['np-ui']:openApplication('minigame-captcha', {
      gameFinishedEndpoint = MinigameUICallbackUrl,
      gameDuration = gameDuration * 5,
      gameRoundsTotal = gameRoundsTotal,
      numberOfShapes = numberOfShapes,
    })



    exports['np-ui']:openApplication('range-picker', {
        ["sliders"] = count,
        ["submitUrl"] = "np-miscscripts:ll:submitSliders"
    })